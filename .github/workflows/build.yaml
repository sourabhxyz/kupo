name: Build

on:
  push:
    branches: [ "devx-static" ]

jobs:
  devx:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [ghc8107-static-minimal]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: |
          cabal-${{ matrix.os }}-${{ hashFiles('cabal.project') }}
        restore-keys: |
          cabal-${{ matrix.os }}-${{ hashFiles('cabal.project') }}

    - uses: cachix/install-nix-action@v17
      with:
        extra_nix_config: |
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= loony-tools:pr9m4BkM/5/eSTZlkQyRt57Jz7OMBxNSUiMC4FkcNfk= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          substituters = https://cache.iog.io/ https://cache.zw3rk.com/ https://cache.nixos.org/

    - name: Prepare dev shell
      shell: bash
      run: nix develop github:input-output-hk/devx#${{ matrix.compiler }} --no-write-lock-file --command cabal update

    - name: Patch cabal.project
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        nix develop github:input-output-hk/devx#${{ matrix.compiler }} --no-write-lock-file --command echo "$CABAL_PROJECT_LOCAL_TEMPLATE" > cabal.project.local
        cat cabal.project.local

    - name: Build project
      shell: bash
      run: |
        mkdir -p dist/bin
        nix develop github:input-output-hk/devx#${{ matrix.compiler }} --no-write-lock-file --command cabal install kupo:exe:kupo --flags +production --installdir=dist/bin --install-method=copy

    - name: Check Dependencies Linking
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        ldd dist/bin/kupo

    - name: Check Dependencies Linking
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        otool -L dist/bin/kupo

    - name: ðŸ“Ž Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: kupo-${{ github.sha }}-${{ runner.arch }}-${{ runner.os }}
        path: |
          dist/bin
